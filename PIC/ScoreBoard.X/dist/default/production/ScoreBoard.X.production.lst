

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jan 14 23:47:18 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1938 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  0110                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020D                     	;# 
   142  0210                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0294                     	;# 
   156  0295                     	;# 
   157  0295                     	;# 
   158  0296                     	;# 
   159  0298                     	;# 
   160  0298                     	;# 
   161  0299                     	;# 
   162  029A                     	;# 
   163  029B                     	;# 
   164  029C                     	;# 
   165  029C                     	;# 
   166  029D                     	;# 
   167  029E                     	;# 
   168  029F                     	;# 
   169  0311                     	;# 
   170  0311                     	;# 
   171  0312                     	;# 
   172  0313                     	;# 
   173  0314                     	;# 
   174  0315                     	;# 
   175  0315                     	;# 
   176  0316                     	;# 
   177  0318                     	;# 
   178  0318                     	;# 
   179  0319                     	;# 
   180  031A                     	;# 
   181  031C                     	;# 
   182  031C                     	;# 
   183  031D                     	;# 
   184  031E                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  0791                     	;# 
   195  0792                     	;# 
   196  0793                     	;# 
   197  0794                     	;# 
   198  0795                     	;# 
   199  0798                     	;# 
   200  0799                     	;# 
   201  07A0                     	;# 
   202  07A1                     	;# 
   203  07A3                     	;# 
   204  07A4                     	;# 
   205  07A6                     	;# 
   206  07A7                     	;# 
   207  07A9                     	;# 
   208  07AA                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  0110                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0191                     	;# 
   287  0191                     	;# 
   288  0192                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0194                     	;# 
   293  0195                     	;# 
   294  0196                     	;# 
   295  0199                     	;# 
   296  019A                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019C                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020D                     	;# 
   307  0210                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029F                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0314                     	;# 
   339  0315                     	;# 
   340  0315                     	;# 
   341  0316                     	;# 
   342  0318                     	;# 
   343  0318                     	;# 
   344  0319                     	;# 
   345  031A                     	;# 
   346  031C                     	;# 
   347  031C                     	;# 
   348  031D                     	;# 
   349  031E                     	;# 
   350  0394                     	;# 
   351  0395                     	;# 
   352  0396                     	;# 
   353  0415                     	;# 
   354  0416                     	;# 
   355  0417                     	;# 
   356  041C                     	;# 
   357  041D                     	;# 
   358  041E                     	;# 
   359  0791                     	;# 
   360  0792                     	;# 
   361  0793                     	;# 
   362  0794                     	;# 
   363  0795                     	;# 
   364  0798                     	;# 
   365  0799                     	;# 
   366  07A0                     	;# 
   367  07A1                     	;# 
   368  07A3                     	;# 
   369  07A4                     	;# 
   370  07A6                     	;# 
   371  07A7                     	;# 
   372  07A9                     	;# 
   373  07AA                     	;# 
   374  0FE4                     	;# 
   375  0FE5                     	;# 
   376  0FE6                     	;# 
   377  0FE7                     	;# 
   378  0FE8                     	;# 
   379  0FE9                     	;# 
   380  0FEA                     	;# 
   381  0FEB                     	;# 
   382  0FED                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385                           
   386                           	psect	idataBANK0
   387  0374                     __pidataBANK0:
   388                           
   389                           ;initializer for _segment
   390  0374  3440               	retlw	64
   391  0375  3479               	retlw	121
   392  0376  3424               	retlw	36
   393  0377  3430               	retlw	48
   394  0378  3419               	retlw	25
   395  0379  3412               	retlw	18
   396  037A  3402               	retlw	2
   397  037B  3478               	retlw	120
   398  037C  3400               	retlw	0
   399  037D  3410               	retlw	16
   400                           
   401                           ;initializer for ICR@index
   402  037E  3401               	retlw	1
   403  000C                     _PORTA	set	12
   404  000E                     _PORTC	set	14
   405  000D                     _PORTB	set	13
   406  0015                     _TMR0	set	21
   407  0067                     _RA7	set	103
   408  006D                     _RB5	set	109
   409  006C                     _RB4	set	108
   410  006B                     _RB3	set	107
   411  006A                     _RB2	set	106
   412  0069                     _RB1	set	105
   413  0068                     _RB0	set	104
   414  005F                     _GIE	set	95
   415  008B                     _SSPIF	set	139
   416  005D                     _T0IE	set	93
   417  005A                     _T0IF	set	90
   418  0075                     _RC5	set	117
   419  0076                     _RC6	set	118
   420  008E                     _TRISC	set	142
   421  008D                     _TRISB	set	141
   422  008C                     _TRISA	set	140
   423  0095                     _OPTION_REGbits	set	149
   424  0099                     _OSCCON	set	153
   425  048B                     _SSPIE	set	1163
   426  018D                     _ANSELB	set	397
   427  018C                     _ANSELA	set	396
   428  0211                     _SSPBUF	set	529
   429  0213                     _SSPMSK	set	531
   430  0212                     _SSPADD	set	530
   431  0216                     _SSPCON2	set	534
   432  0215                     _SSPCON1	set	533
   433  0214                     _SSPSTAT	set	532
   434  020D                     _WPUB	set	525
   435                           
   436                           	psect	cinit
   437  01A4                     start_initialization:	
   438                           ; #config settings
   439                           
   440  01A4                     __initialization:
   441                           
   442                           ; Initialize objects allocated to BANK0
   443  01A4  3074               	movlw	low __pidataBANK0
   444  01A5  0084               	movwf	4
   445  01A6  3083               	movlw	(high __pidataBANK0)| (0+128)
   446  01A7  0085               	movwf	5
   447  01A8  3037               	movlw	low __pdataBANK0
   448  01A9  0086               	movwf	6
   449  01AA  3000               	movlw	high __pdataBANK0
   450  01AB  0087               	movwf	7
   451  01AC  300B               	movlw	11
   452  01AD  3183  237F  3181   	fcall	init_ram
   453                           
   454                           ; Clear objects allocated to BANK0
   455  01B0  3020               	movlw	low __pbssBANK0
   456  01B1  0084               	movwf	4
   457  01B2  3000               	movlw	high __pbssBANK0
   458  01B3  0085               	movwf	5
   459  01B4  3017               	movlw	23
   460  01B5  3183  2385  3181   	fcall	clear_ram0
   461  01B8                     end_of_initialization:	
   462                           ;End of C runtime variable initialization code
   463                           
   464  01B8                     __end_of__initialization:
   465  01B8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   466  01B9  0020               	movlb	0
   467  01BA  3181  29BC         	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssBANK0
   470  0020                     __pbssBANK0:
   471  0020                     _score_dig:
   472  0020                     	ds	6
   473  0026                     _roll:
   474  0026                     	ds	3
   475  0029                     _recv_data:
   476  0029                     	ds	3
   477  002C                     ICR@count:
   478  002C                     	ds	2
   479  002E                     ICR@score:
   480  002E                     	ds	2
   481  0030                     _recv_score:
   482  0030                     	ds	2
   483  0032                     _disable:
   484  0032                     	ds	1
   485  0033                     _roll_number:
   486  0033                     	ds	1
   487  0034                     _send:
   488  0034                     	ds	1
   489  0035                     _buf:
   490  0035                     	ds	1
   491  0036                     _recv_count:
   492  0036                     	ds	1
   493                           
   494                           	psect	dataBANK0
   495  0037                     __pdataBANK0:
   496  0037                     _segment:
   497  0037                     	ds	10
   498  0041                     ICR@index:
   499  0041                     	ds	1
   500                           
   501                           	psect	inittext
   502  037F                     init_ram:
   503  037F  00FE               	movwf	btemp
   504  0380                     initloop:
   505  0380  0012               	moviw fsr0++
   506  0381  001E               	movwi fsr1++
   507  0382  0BFE               	decfsz	btemp,f
   508  0383  2B80               	goto	initloop
   509  0384  3400               	retlw	0
   510                           
   511                           	psect	clrtext
   512  0385                     clear_ram0:	
   513                           ;	Called with FSR0 containing the base address, and
   514                           ;	WREG with the size to clear
   515                           
   516  0385  0064               	clrwdt	;clear the watchdog before getting into this loop
   517  0386                     clrloop0:
   518  0386  0180               	clrf	0	;clear RAM location pointed to by FSR
   519  0387  3101               	addfsr 0,1
   520  0388  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   521  0389  2B86               	goto	clrloop0	;have we reached the end yet?
   522  038A  3400               	retlw	0	;all done for this memory range, return
   523                           
   524                           	psect	cstackCOMMON
   525  0070                     __pcstackCOMMON:
   526  0070                     ?_main:
   527  0070                     ?_ICR:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?___wmul:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?___awmod:	
   534                           ; 2 bytes @ 0x0
   535                           
   536  0070                     ?___lwmod:	
   537                           ; 2 bytes @ 0x0
   538                           
   539  0070                     ___wmul@multiplier:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  0070                     ___awmod@divisor:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  0070                     ___lwmod@divisor:	
   546                           ; 2 bytes @ 0x0
   547                           
   548                           
   549                           ; 2 bytes @ 0x0
   550  0070                     	ds	2
   551  0072                     ___wmul@multiplicand:
   552  0072                     ___awmod@dividend:	
   553                           ; 2 bytes @ 0x2
   554                           
   555  0072                     ___lwmod@dividend:	
   556                           ; 2 bytes @ 0x2
   557                           
   558                           
   559                           ; 2 bytes @ 0x2
   560  0072                     	ds	2
   561  0074                     ??___wmul:
   562  0074                     ??___awmod:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     ??___lwmod:	
   566                           ; 1 bytes @ 0x4
   567                           
   568  0074                     ___wmul@product:	
   569                           ; 1 bytes @ 0x4
   570                           
   571                           
   572                           ; 2 bytes @ 0x4
   573  0074                     	ds	1
   574  0075                     ___awmod@counter:
   575  0075                     ___lwmod@counter:	
   576                           ; 1 bytes @ 0x5
   577                           
   578                           
   579                           ; 1 bytes @ 0x5
   580  0075                     	ds	1
   581  0076                     ?___lwdiv:
   582  0076                     ___awmod@sign:	
   583                           ; 2 bytes @ 0x6
   584                           
   585  0076                     ___lwdiv@divisor:	
   586                           ; 1 bytes @ 0x6
   587                           
   588                           
   589                           ; 2 bytes @ 0x6
   590  0076                     	ds	2
   591  0078                     ___lwdiv@dividend:
   592                           
   593                           ; 2 bytes @ 0x8
   594  0078                     	ds	2
   595  007A                     ??___lwdiv:
   596                           
   597                           ; 1 bytes @ 0xA
   598  007A                     	ds	1
   599  007B                     ___lwdiv@quotient:
   600                           
   601                           ; 2 bytes @ 0xB
   602  007B                     	ds	2
   603  007D                     ___lwdiv@counter:
   604                           
   605                           ; 1 bytes @ 0xD
   606  007D                     	ds	1
   607                           
   608                           	psect	cstackBANK0
   609  0042                     __pcstackBANK0:
   610  0042                     ??_ICR:
   611                           
   612                           ; 1 bytes @ 0x0
   613  0042                     	ds	4
   614  0046                     ??_main:
   615                           
   616                           ; 1 bytes @ 0x4
   617  0046                     	ds	2
   618  0048                     main@address:
   619                           
   620                           ; 1 bytes @ 0x6
   621  0048                     	ds	1
   622                           
   623                           	psect	maintext
   624  01BC                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 70 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  address         1    6[BANK0 ] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   639 ;; Tracked objects:
   640 ;;		On entry : B1F/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   648 ;;Total ram usage:        3 bytes
   649 ;; Hardware stack levels required when called:    2
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		Startup code after reset
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _main
   659  01BC                     _main:
   660  01BC                     l1119:	
   661                           ;incstack = 0
   662                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0]
   663                           
   664                           
   665                           ;main.c: 71:     OSCCON = 0b01110000;
   666  01BC  3070               	movlw	112
   667  01BD  0021               	movlb	1	; select bank1
   668  01BE  0099               	movwf	25	;volatile
   669  01BF                     l1121:
   670                           
   671                           ;main.c: 72:     OPTION_REGbits.nWPUEN = 0x00;
   672  01BF  1395               	bcf	21,7	;volatile
   673  01C0                     l1123:
   674                           
   675                           ;main.c: 74:     ANSELA = 0x00;
   676  01C0  0023               	movlb	3	; select bank3
   677  01C1  018C               	clrf	12	;volatile
   678  01C2                     l1125:
   679                           
   680                           ;main.c: 75:     TRISA = 0x00;
   681  01C2  0021               	movlb	1	; select bank1
   682  01C3  018C               	clrf	12	;volatile
   683                           
   684                           ;main.c: 76:     ANSELB = 0xC0;
   685  01C4  30C0               	movlw	192
   686  01C5  0023               	movlb	3	; select bank3
   687  01C6  008D               	movwf	13	;volatile
   688                           
   689                           ;main.c: 77:     TRISB = 0x3F;
   690  01C7  303F               	movlw	63
   691  01C8  0021               	movlb	1	; select bank1
   692  01C9  008D               	movwf	13	;volatile
   693                           
   694                           ;main.c: 78:     WPUB = 0x3F;
   695  01CA  303F               	movlw	63
   696  01CB  0024               	movlb	4	; select bank4
   697  01CC  008D               	movwf	13	;volatile
   698                           
   699                           ;main.c: 79:     TRISC = 0b1111000;
   700  01CD  3078               	movlw	120
   701  01CE  0021               	movlb	1	; select bank1
   702  01CF  008E               	movwf	14	;volatile
   703                           
   704                           ;main.c: 81:     SSPSTAT = 0b10000000;
   705  01D0  3080               	movlw	128
   706  01D1  0024               	movlb	4	; select bank4
   707  01D2  0094               	movwf	20	;volatile
   708                           
   709                           ;main.c: 82:     SSPCON1 = 0b00100110;
   710  01D3  3026               	movlw	38
   711  01D4  0095               	movwf	21	;volatile
   712  01D5                     l1127:
   713                           
   714                           ;main.c: 83:     SSPCON2 |= 0x01;
   715  01D5  1416               	bsf	22,0	;volatile
   716                           
   717                           ;main.c: 84:     unsigned char address = (RC6) + (RC5 << 1);
   718  01D6  3000               	movlw	0
   719  01D7  0020               	movlb	0	; select bank0
   720  01D8  1A8E               	btfsc	14,5	;volatile
   721  01D9  3002               	movlw	2
   722  01DA  1B0E               	btfsc	14,6	;volatile
   723  01DB  3E01               	addlw	1
   724  01DC  00C6               	movwf	??_main
   725  01DD  0846               	movf	??_main,w
   726  01DE  00C8               	movwf	main@address
   727  01DF                     l1129:
   728                           
   729                           ;main.c: 85:     SSPADD = (address << 1) & 0xFE;
   730  01DF  3548               	lslf	main@address,w
   731  01E0  39FE               	andlw	254
   732  01E1  0024               	movlb	4	; select bank4
   733  01E2  0092               	movwf	18	;volatile
   734  01E3                     l1131:
   735                           
   736                           ;main.c: 86:     SSPMSK = 0xFE;
   737  01E3  30FE               	movlw	254
   738  01E4  0093               	movwf	19	;volatile
   739                           
   740                           ;main.c: 88:     OPTION_REGbits.PS = 0b100;
   741  01E5  0021               	movlb	1	; select bank1
   742  01E6  0815               	movf	21,w	;volatile
   743  01E7  39F8               	andlw	-8
   744  01E8  3804               	iorlw	4
   745  01E9  0095               	movwf	21	;volatile
   746  01EA                     l1133:
   747                           
   748                           ;main.c: 89:     OPTION_REGbits.PSA = 0;
   749  01EA  1195               	bcf	21,3	;volatile
   750  01EB                     l1135:
   751                           
   752                           ;main.c: 90:     OPTION_REGbits.TMR0CS = 0;
   753  01EB  1295               	bcf	21,5	;volatile
   754  01EC                     l1137:
   755                           
   756                           ;main.c: 91:     OPTION_REGbits.TMR0SE = 1;
   757  01EC  1615               	bsf	21,4	;volatile
   758  01ED                     l1139:
   759                           
   760                           ;main.c: 92:     TMR0 = 0;
   761  01ED  0020               	movlb	0	; select bank0
   762  01EE  0195               	clrf	21	;volatile
   763  01EF                     l1141:
   764                           
   765                           ;main.c: 93:     T0IF = 0;
   766  01EF  110B               	bcf	11,2	;volatile
   767  01F0                     l1143:
   768                           
   769                           ;main.c: 94:     T0IE = 1;
   770  01F0  168B               	bsf	11,5	;volatile
   771  01F1                     l1145:
   772                           
   773                           ;main.c: 95:     SSPIF = 0;
   774  01F1  1191               	bcf	17,3	;volatile
   775  01F2                     l1147:
   776                           
   777                           ;main.c: 96:     SSPIE = 1;
   778  01F2  0021               	movlb	1	; select bank1
   779  01F3  1591               	bsf	17,3	;volatile
   780  01F4                     l1149:
   781                           
   782                           ;main.c: 97:     GIE = 1;
   783  01F4  178B               	bsf	11,7	;volatile
   784  01F5                     l1151:
   785                           
   786                           ;main.c: 100:         if(PORTB != 0x3F){
   787  01F5  303F               	movlw	63
   788  01F6  0020               	movlb	0	; select bank0
   789  01F7  060D               	xorwf	13,w	;volatile
   790  01F8  1903               	btfsc	3,2
   791  01F9  29FB               	goto	u901
   792  01FA  29FC               	goto	u900
   793  01FB                     u901:
   794  01FB  29F5               	goto	l1151
   795  01FC                     u900:
   796  01FC                     l1153:
   797                           
   798                           ;main.c: 101:             T0IE = 0;
   799  01FC  128B               	bcf	11,5	;volatile
   800                           
   801                           ;main.c: 102:             if(!RB0) score_dig[2]++;
   802  01FD  180D               	btfsc	13,0	;volatile
   803  01FE  2A00               	goto	u911
   804  01FF  2A01               	goto	u910
   805  0200                     u911:
   806  0200  2A05               	goto	l1157
   807  0201                     u910:
   808  0201                     l1155:
   809  0201  3001               	movlw	1
   810  0202  07A4               	addwf	_score_dig+4,f
   811  0203  3000               	movlw	0
   812  0204  3DA5               	addwfc	_score_dig+5,f
   813  0205                     l1157:
   814                           
   815                           ;main.c: 103:             if(!RB1) score_dig[2]--;
   816  0205  188D               	btfsc	13,1	;volatile
   817  0206  2A08               	goto	u921
   818  0207  2A09               	goto	u920
   819  0208                     u921:
   820  0208  2A0D               	goto	l1161
   821  0209                     u920:
   822  0209                     l1159:
   823  0209  30FF               	movlw	255
   824  020A  07A4               	addwf	_score_dig+4,f
   825  020B  30FF               	movlw	255
   826  020C  3DA5               	addwfc	_score_dig+5,f
   827  020D                     l1161:
   828                           
   829                           ;main.c: 104:             if(!RB2) score_dig[1]++;
   830  020D  190D               	btfsc	13,2	;volatile
   831  020E  2A10               	goto	u931
   832  020F  2A11               	goto	u930
   833  0210                     u931:
   834  0210  2A15               	goto	l1165
   835  0211                     u930:
   836  0211                     l1163:
   837  0211  3001               	movlw	1
   838  0212  07A2               	addwf	_score_dig+2,f
   839  0213  3000               	movlw	0
   840  0214  3DA3               	addwfc	_score_dig+3,f
   841  0215                     l1165:
   842                           
   843                           ;main.c: 105:             if(!RB3) score_dig[1]--;
   844  0215  198D               	btfsc	13,3	;volatile
   845  0216  2A18               	goto	u941
   846  0217  2A19               	goto	u940
   847  0218                     u941:
   848  0218  2A1D               	goto	l1169
   849  0219                     u940:
   850  0219                     l1167:
   851  0219  30FF               	movlw	255
   852  021A  07A2               	addwf	_score_dig+2,f
   853  021B  30FF               	movlw	255
   854  021C  3DA3               	addwfc	_score_dig+3,f
   855  021D                     l1169:
   856                           
   857                           ;main.c: 106:             if(!RB4) score_dig[0]++;
   858  021D  1A0D               	btfsc	13,4	;volatile
   859  021E  2A20               	goto	u951
   860  021F  2A21               	goto	u950
   861  0220                     u951:
   862  0220  2A25               	goto	l1173
   863  0221                     u950:
   864  0221                     l1171:
   865  0221  3001               	movlw	1
   866  0222  07A0               	addwf	_score_dig,f
   867  0223  3000               	movlw	0
   868  0224  3DA1               	addwfc	_score_dig+1,f
   869  0225                     l1173:
   870                           
   871                           ;main.c: 107:             if(!RB5) score_dig[0]--;
   872  0225  1A8D               	btfsc	13,5	;volatile
   873  0226  2A28               	goto	u961
   874  0227  2A29               	goto	u960
   875  0228                     u961:
   876  0228  2A2D               	goto	l1177
   877  0229                     u960:
   878  0229                     l1175:
   879  0229  30FF               	movlw	255
   880  022A  07A0               	addwf	_score_dig,f
   881  022B  30FF               	movlw	255
   882  022C  3DA1               	addwfc	_score_dig+1,f
   883  022D                     l1177:
   884                           
   885                           ;main.c: 108:             if(score_dig[2] < 0)score_dig[2] = 9;
   886  022D  3004               	movlw	4
   887  022E  3E20               	addlw	(low (_score_dig| 0))& (0+255)
   888  022F  0086               	movwf	6
   889  0230  0187               	clrf	7
   890  0231  3141               	addfsr 1,1
   891  0232  1F81               	btfss	1,7
   892  0233  2A35               	goto	u971
   893  0234  2A36               	goto	u970
   894  0235                     u971:
   895  0235  2A3A               	goto	l99
   896  0236                     u970:
   897  0236                     l1179:
   898  0236  3009               	movlw	9
   899  0237  00A4               	movwf	_score_dig+4
   900  0238  3000               	movlw	0
   901  0239  00A5               	movwf	_score_dig+5
   902  023A                     l99:
   903                           
   904                           ;main.c: 109:             if(score_dig[2] > 9)score_dig[2] = 0;
   905  023A  0825               	movf	_score_dig+5,w
   906  023B  3A80               	xorlw	128
   907  023C  00C6               	movwf	??_main
   908  023D  3080               	movlw	128
   909  023E  0246               	subwf	??_main,w
   910  023F  1D03               	skipz
   911  0240  2A43               	goto	u985
   912  0241  300A               	movlw	10
   913  0242  0224               	subwf	_score_dig+4,w
   914  0243                     u985:
   915  0243  1C03               	skipc
   916  0244  2A46               	goto	u981
   917  0245  2A47               	goto	u980
   918  0246                     u981:
   919  0246  2A4A               	goto	l1183
   920  0247                     u980:
   921  0247                     l1181:
   922  0247  0020               	movlb	0	; select bank0
   923  0248  01A4               	clrf	_score_dig+4
   924  0249  01A5               	clrf	_score_dig+5
   925  024A                     l1183:
   926                           
   927                           ;main.c: 110:             if(score_dig[1] < 0)score_dig[1] = 9;
   928  024A  3002               	movlw	2
   929  024B  3E20               	addlw	(low (_score_dig| 0))& (0+255)
   930  024C  0086               	movwf	6
   931  024D  0187               	clrf	7
   932  024E  3141               	addfsr 1,1
   933  024F  1F81               	btfss	1,7
   934  0250  2A52               	goto	u991
   935  0251  2A53               	goto	u990
   936  0252                     u991:
   937  0252  2A58               	goto	l101
   938  0253                     u990:
   939  0253                     l1185:
   940  0253  3009               	movlw	9
   941  0254  0020               	movlb	0	; select bank0
   942  0255  00A2               	movwf	_score_dig+2
   943  0256  3000               	movlw	0
   944  0257  00A3               	movwf	_score_dig+3
   945  0258                     l101:
   946                           
   947                           ;main.c: 111:             if(score_dig[1] > 9)score_dig[1] = 0;
   948  0258  0020               	movlb	0	; select bank0
   949  0259  0823               	movf	_score_dig+3,w
   950  025A  3A80               	xorlw	128
   951  025B  00C6               	movwf	??_main
   952  025C  3080               	movlw	128
   953  025D  0246               	subwf	??_main,w
   954  025E  1D03               	skipz
   955  025F  2A62               	goto	u1005
   956  0260  300A               	movlw	10
   957  0261  0222               	subwf	_score_dig+2,w
   958  0262                     u1005:
   959  0262  1C03               	skipc
   960  0263  2A65               	goto	u1001
   961  0264  2A66               	goto	u1000
   962  0265                     u1001:
   963  0265  2A69               	goto	l1189
   964  0266                     u1000:
   965  0266                     l1187:
   966  0266  0020               	movlb	0	; select bank0
   967  0267  01A2               	clrf	_score_dig+2
   968  0268  01A3               	clrf	_score_dig+3
   969  0269                     l1189:
   970                           
   971                           ;main.c: 112:             if(score_dig[0] < 0)score_dig[0] = 9;
   972  0269  0020               	movlb	0	; select bank0
   973  026A  1FA1               	btfss	_score_dig+1,7
   974  026B  2A6D               	goto	u1011
   975  026C  2A6E               	goto	u1010
   976  026D                     u1011:
   977  026D  2A72               	goto	l103
   978  026E                     u1010:
   979  026E                     l1191:
   980  026E  3009               	movlw	9
   981  026F  00A0               	movwf	_score_dig
   982  0270  3000               	movlw	0
   983  0271  00A1               	movwf	_score_dig+1
   984  0272                     l103:
   985                           
   986                           ;main.c: 113:             if(score_dig[0] > 9)score_dig[0] = 0;
   987  0272  0821               	movf	_score_dig+1,w
   988  0273  3A80               	xorlw	128
   989  0274  00C6               	movwf	??_main
   990  0275  3080               	movlw	128
   991  0276  0246               	subwf	??_main,w
   992  0277  1D03               	skipz
   993  0278  2A7B               	goto	u1025
   994  0279  300A               	movlw	10
   995  027A  0220               	subwf	_score_dig,w
   996  027B                     u1025:
   997  027B  1C03               	skipc
   998  027C  2A7E               	goto	u1021
   999  027D  2A7F               	goto	u1020
  1000  027E                     u1021:
  1001  027E  2A82               	goto	l1195
  1002  027F                     u1020:
  1003  027F                     l1193:
  1004  027F  0020               	movlb	0	; select bank0
  1005  0280  01A0               	clrf	_score_dig
  1006  0281  01A1               	clrf	_score_dig+1
  1007  0282                     l1195:
  1008                           
  1009                           ;main.c: 114:             T0IE = 1;
  1010  0282  168B               	bsf	11,5	;volatile
  1011  0283                     l1197:
  1012                           
  1013                           ;main.c: 115:             _delay((unsigned long)((100)*(32000000/4000.0)));
  1014  0283  3005               	movlw	5
  1015  0284  0020               	movlb	0	; select bank0
  1016  0285  00C7               	movwf	??_main+1
  1017  0286  300F               	movlw	15
  1018  0287  00C6               	movwf	??_main
  1019  0288  30F1               	movlw	241
  1020  0289                     u1277:
  1021  0289  0B89               	decfsz	9,f
  1022  028A  2A89               	goto	u1277
  1023  028B  0BC6               	decfsz	??_main,f
  1024  028C  2A89               	goto	u1277
  1025  028D  0BC7               	decfsz	??_main+1,f
  1026  028E  2A89               	goto	u1277
  1027  028F  29F5               	goto	l1151
  1028  0290  3181  29A2         	ljmp	start
  1029  0292                     __end_of_main:
  1030                           
  1031                           	psect	intentry
  1032  0004                     __pintentry:	
  1033 ;; *************** function _ICR *****************
  1034 ;; Defined at:
  1035 ;;		line 122 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1053 ;;Total ram usage:        4 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		___awmod
  1058 ;;		___lwdiv
  1059 ;;		___lwmod
  1060 ;;		___wmul
  1061 ;; This function is called by:
  1062 ;;		Interrupt level 1
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066  0004                     _ICR:
  1067                           
  1068                           ;incstack = 0
  1069  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1070                           
  1071                           ; Regs used in _ICR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1072  0005  3180               	pagesel	$
  1073  0006                     i1l1199:
  1074                           
  1075                           ;main.c: 123:     if(SSPIF){
  1076  0006  0020               	movlb	0	; select bank0
  1077  0007  1D91               	btfss	17,3	;volatile
  1078  0008  280A               	goto	u103_21
  1079  0009  280B               	goto	u103_20
  1080  000A                     u103_21:
  1081  000A  28D9               	goto	i1l112
  1082  000B                     u103_20:
  1083  000B                     i1l1201:
  1084                           
  1085                           ;main.c: 124:         if((SSPSTAT & 0x04) == 0){
  1086  000B  0024               	movlb	4	; select bank4
  1087  000C  1914               	btfsc	20,2	;volatile
  1088  000D  280F               	goto	u104_21
  1089  000E  2810               	goto	u104_20
  1090  000F                     u104_21:
  1091  000F  2893               	goto	i1l1231
  1092  0010                     u104_20:
  1093  0010                     i1l1203:
  1094                           
  1095                           ;main.c: 125:             if((SSPSTAT & 0x20) == 0){
  1096  0010  1A94               	btfsc	20,5	;volatile
  1097  0011  2813               	goto	u105_21
  1098  0012  2814               	goto	u105_20
  1099  0013                     u105_21:
  1100  0013  281B               	goto	i1l1209
  1101  0014                     u105_20:
  1102  0014                     i1l1205:
  1103                           
  1104                           ;main.c: 126:                 buf = SSPBUF;
  1105  0014  0811               	movf	17,w	;volatile
  1106  0015  0020               	movlb	0	; select bank0
  1107  0016  00C2               	movwf	??_ICR
  1108  0017  0842               	movf	??_ICR,w
  1109  0018  00B5               	movwf	_buf
  1110  0019                     i1l1207:
  1111                           
  1112                           ;main.c: 127:                 recv_count = 0;
  1113  0019  01B6               	clrf	_recv_count
  1114                           
  1115                           ;main.c: 128:             }else{
  1116  001A  2890               	goto	i1l1229
  1117  001B                     i1l1209:
  1118                           
  1119                           ;main.c: 129:                 recv_data[recv_count++] = SSPBUF;
  1120  001B  0811               	movf	17,w	;volatile
  1121  001C  0020               	movlb	0	; select bank0
  1122  001D  00C2               	movwf	??_ICR
  1123  001E  0836               	movf	_recv_count,w
  1124  001F  3E29               	addlw	(low (_recv_data| 0))& (0+255)
  1125  0020  0086               	movwf	6
  1126  0021  0187               	clrf	7
  1127  0022  0842               	movf	??_ICR,w
  1128  0023  0081               	movwf	1
  1129  0024                     i1l1211:
  1130  0024  3001               	movlw	1
  1131  0025  00C2               	movwf	??_ICR
  1132  0026  0842               	movf	??_ICR,w
  1133  0027  07B6               	addwf	_recv_count,f
  1134  0028                     i1l1213:
  1135                           
  1136                           ;main.c: 130:                 recv_score = recv_data[0] + (recv_data[1] << 8);
  1137  0028  082A               	movf	_recv_data+1,w
  1138  0029  00C2               	movwf	??_ICR
  1139  002A  01C3               	clrf	??_ICR+1
  1140  002B  0842               	movf	??_ICR,w
  1141  002C  00C3               	movwf	??_ICR+1
  1142  002D  01C2               	clrf	??_ICR
  1143  002E  0829               	movf	_recv_data,w
  1144  002F  0742               	addwf	??_ICR,w
  1145  0030  00B0               	movwf	_recv_score
  1146  0031  0843               	movf	??_ICR+1,w
  1147  0032  1803               	skipnc
  1148  0033  0A43               	incf	??_ICR+1,w
  1149  0034  00B1               	movwf	_recv_score+1
  1150  0035                     i1l1215:
  1151                           
  1152                           ;main.c: 131:                 roll[0] = (recv_data[2] & 0b1000) >> 3;
  1153  0035  082B               	movf	_recv_data+2,w
  1154  0036  00C2               	movwf	??_ICR
  1155  0037  3003               	movlw	3
  1156  0038                     u106_25:
  1157  0038  36C2               	lsrf	??_ICR,f
  1158  0039  0B89               	decfsz	9,f
  1159  003A  2838               	goto	u106_25
  1160  003B  0842               	movf	??_ICR,w
  1161  003C  3901               	andlw	1
  1162  003D  00C3               	movwf	??_ICR+1
  1163  003E  0843               	movf	??_ICR+1,w
  1164  003F  00A6               	movwf	_roll
  1165  0040                     i1l1217:
  1166                           
  1167                           ;main.c: 132:                 roll[1] = (recv_data[2] & 0b100) >> 2;
  1168  0040  082B               	movf	_recv_data+2,w
  1169  0041  00C2               	movwf	??_ICR
  1170  0042  3002               	movlw	2
  1171  0043                     u107_25:
  1172  0043  36C2               	lsrf	??_ICR,f
  1173  0044  0B89               	decfsz	9,f
  1174  0045  2843               	goto	u107_25
  1175  0046  0842               	movf	??_ICR,w
  1176  0047  3901               	andlw	1
  1177  0048  00C3               	movwf	??_ICR+1
  1178  0049  0843               	movf	??_ICR+1,w
  1179  004A  00A7               	movwf	_roll+1
  1180  004B                     i1l1219:
  1181                           
  1182                           ;main.c: 133:                 roll[2] = (recv_data[2] & 0b10) >> 1;
  1183  004B  362B               	lsrf	_recv_data+2,w
  1184  004C  3901               	andlw	1
  1185  004D  00C2               	movwf	??_ICR
  1186  004E  0842               	movf	??_ICR,w
  1187  004F  00A8               	movwf	_roll+2
  1188  0050                     i1l1221:
  1189                           
  1190                           ;main.c: 134:                 disable = recv_data[2] & 0b1;
  1191  0050  082B               	movf	_recv_data+2,w
  1192  0051  3901               	andlw	1
  1193  0052  00C2               	movwf	??_ICR
  1194  0053  0842               	movf	??_ICR,w
  1195  0054  00B2               	movwf	_disable
  1196  0055                     i1l1223:
  1197                           
  1198                           ;main.c: 135:                 score_dig[0] = recv_score / 100;
  1199  0055  3064               	movlw	100
  1200  0056  00F6               	movwf	___lwdiv@divisor
  1201  0057  3000               	movlw	0
  1202  0058  00F7               	movwf	___lwdiv@divisor+1
  1203  0059  0831               	movf	_recv_score+1,w
  1204  005A  00F9               	movwf	___lwdiv@dividend+1
  1205  005B  0830               	movf	_recv_score,w
  1206  005C  00F8               	movwf	___lwdiv@dividend
  1207  005D  3182  22E5  3180   	fcall	___lwdiv
  1208  0060  0877               	movf	?___lwdiv+1,w
  1209  0061  0020               	movlb	0	; select bank0
  1210  0062  00A1               	movwf	_score_dig+1
  1211  0063  0876               	movf	?___lwdiv,w
  1212  0064  00A0               	movwf	_score_dig
  1213  0065                     i1l1225:
  1214                           
  1215                           ;main.c: 136:                 score_dig[1] = recv_score % 100 / 10;
  1216  0065  300A               	movlw	10
  1217  0066  00F6               	movwf	___lwdiv@divisor
  1218  0067  3000               	movlw	0
  1219  0068  00F7               	movwf	___lwdiv@divisor+1
  1220  0069  0831               	movf	_recv_score+1,w
  1221  006A  00F3               	movwf	___lwmod@dividend+1
  1222  006B  0830               	movf	_recv_score,w
  1223  006C  00F2               	movwf	___lwmod@dividend
  1224  006D  3064               	movlw	100
  1225  006E  00F0               	movwf	___lwmod@divisor
  1226  006F  3000               	movlw	0
  1227  0070  00F1               	movwf	___lwmod@divisor+1
  1228  0071  3183  2321  3180   	fcall	___lwmod
  1229  0074  0871               	movf	?___lwmod+1,w
  1230  0075  00F9               	movwf	___lwdiv@dividend+1
  1231  0076  0870               	movf	?___lwmod,w
  1232  0077  00F8               	movwf	___lwdiv@dividend
  1233  0078  3182  22E5  3180   	fcall	___lwdiv
  1234  007B  0877               	movf	?___lwdiv+1,w
  1235  007C  0020               	movlb	0	; select bank0
  1236  007D  00A3               	movwf	_score_dig+3
  1237  007E  0876               	movf	?___lwdiv,w
  1238  007F  00A2               	movwf	_score_dig+2
  1239  0080                     i1l1227:
  1240                           
  1241                           ;main.c: 137:                 score_dig[2] = recv_score % 10;
  1242  0080  300A               	movlw	10
  1243  0081  00F0               	movwf	___lwmod@divisor
  1244  0082  3000               	movlw	0
  1245  0083  00F1               	movwf	___lwmod@divisor+1
  1246  0084  0831               	movf	_recv_score+1,w
  1247  0085  00F3               	movwf	___lwmod@dividend+1
  1248  0086  0830               	movf	_recv_score,w
  1249  0087  00F2               	movwf	___lwmod@dividend
  1250  0088  3183  2321  3180   	fcall	___lwmod
  1251  008B  0871               	movf	?___lwmod+1,w
  1252  008C  0020               	movlb	0	; select bank0
  1253  008D  00A5               	movwf	_score_dig+5
  1254  008E  0870               	movf	?___lwmod,w
  1255  008F  00A4               	movwf	_score_dig+4
  1256  0090                     i1l1229:
  1257                           
  1258                           ;main.c: 139:             SSPCON1 |= 0x10;
  1259  0090  0024               	movlb	4	; select bank4
  1260  0091  1615               	bsf	21,4	;volatile
  1261                           
  1262                           ;main.c: 140:         }else{
  1263  0092  28D7               	goto	i1l116
  1264  0093                     i1l1231:
  1265                           
  1266                           ;main.c: 141:             static int score;;main.c: 142:             score = score_dig[0
      +                          ] * 100 + score_dig[1] * 10 + score_dig[2];
  1267  0093  3004               	movlw	4
  1268  0094  3E20               	addlw	(low (_score_dig| 0))& (0+255)
  1269  0095  0086               	movwf	6
  1270  0096  0187               	clrf	7
  1271  0097  0020               	movlb	0	; select bank0
  1272  0098  0821               	movf	_score_dig+1,w
  1273  0099  00F1               	movwf	___wmul@multiplier+1
  1274  009A  0820               	movf	_score_dig,w
  1275  009B  00F0               	movwf	___wmul@multiplier
  1276  009C  3064               	movlw	100
  1277  009D  00F2               	movwf	___wmul@multiplicand
  1278  009E  3000               	movlw	0
  1279  009F  00F3               	movwf	___wmul@multiplicand+1
  1280  00A0  3183  2355  3180   	fcall	___wmul
  1281  00A3  0870               	movf	?___wmul,w
  1282  00A4  0020               	movlb	0	; select bank0
  1283  00A5  00C2               	movwf	??_ICR
  1284  00A6  0871               	movf	?___wmul+1,w
  1285  00A7  00C3               	movwf	??_ICR+1
  1286  00A8  0823               	movf	_score_dig+3,w
  1287  00A9  00F1               	movwf	___wmul@multiplier+1
  1288  00AA  0822               	movf	_score_dig+2,w
  1289  00AB  00F0               	movwf	___wmul@multiplier
  1290  00AC  300A               	movlw	10
  1291  00AD  00F2               	movwf	___wmul@multiplicand
  1292  00AE  3000               	movlw	0
  1293  00AF  00F3               	movwf	___wmul@multiplicand+1
  1294  00B0  3183  2355  3180   	fcall	___wmul
  1295  00B3  0870               	movf	?___wmul,w
  1296  00B4  0020               	movlb	0	; select bank0
  1297  00B5  0742               	addwf	??_ICR,w
  1298  00B6  00C4               	movwf	??_ICR+2
  1299  00B7  0871               	movf	?___wmul+1,w
  1300  00B8  3D43               	addwfc	??_ICR+1,w
  1301  00B9  00C5               	movwf	??_ICR+3
  1302  00BA  3F40               	moviw [0]fsr1
  1303  00BB  0744               	addwf	??_ICR+2,w
  1304  00BC  00AE               	movwf	ICR@score
  1305  00BD  3F41               	moviw [1]fsr1
  1306  00BE  3D45               	addwfc	??_ICR+3,w
  1307  00BF  00AF               	movwf	ICR@score+1
  1308  00C0                     i1l1233:
  1309                           
  1310                           ;main.c: 143:             if((SSPSTAT & 0x01) != 0){
  1311  00C0  0024               	movlb	4	; select bank4
  1312  00C1  1C14               	btfss	20,0	;volatile
  1313  00C2  28C4               	goto	u108_21
  1314  00C3  28C5               	goto	u108_20
  1315  00C4                     u108_21:
  1316  00C4  28CE               	goto	i1l119
  1317  00C5                     u108_20:
  1318  00C5                     i1l1235:
  1319                           
  1320                           ;main.c: 144:                 buf = SSPBUF;
  1321  00C5  0811               	movf	17,w	;volatile
  1322  00C6  0020               	movlb	0	; select bank0
  1323  00C7  00C2               	movwf	??_ICR
  1324  00C8  0842               	movf	??_ICR,w
  1325  00C9  00B5               	movwf	_buf
  1326                           
  1327                           ;main.c: 145:                 SSPBUF = score & 0xFF;
  1328  00CA  082E               	movf	ICR@score,w
  1329  00CB  0024               	movlb	4	; select bank4
  1330  00CC  0091               	movwf	17	;volatile
  1331  00CD  2890               	goto	i1l1229
  1332  00CE                     i1l119:
  1333                           
  1334                           ;main.c: 148:                 if((SSPCON2 & 0x40) == 0){
  1335  00CE  1B16               	btfsc	22,6	;volatile
  1336  00CF  28D1               	goto	u109_21
  1337  00D0  28D2               	goto	u109_20
  1338  00D1                     u109_21:
  1339  00D1  28D7               	goto	i1l116
  1340  00D2                     u109_20:
  1341  00D2                     i1l1239:
  1342                           
  1343                           ;main.c: 149:                     SSPBUF = score >> 8;
  1344  00D2  0020               	movlb	0	; select bank0
  1345  00D3  082F               	movf	ICR@score+1,w
  1346  00D4  0024               	movlb	4	; select bank4
  1347  00D5  0091               	movwf	17	;volatile
  1348  00D6  2890               	goto	i1l1229
  1349  00D7                     i1l116:	
  1350                           ;main.c: 155:         }
  1351                           
  1352                           
  1353                           ;main.c: 156:         SSPIF = 0;
  1354  00D7  0020               	movlb	0	; select bank0
  1355  00D8  1191               	bcf	17,3	;volatile
  1356  00D9                     i1l112:	
  1357                           ;main.c: 157:     }
  1358                           
  1359                           
  1360                           ;main.c: 159:     if(T0IF == 1){
  1361  00D9  1D0B               	btfss	11,2	;volatile
  1362  00DA  28DC               	goto	u110_21
  1363  00DB  28DD               	goto	u110_20
  1364  00DC                     u110_21:
  1365  00DC  29A0               	goto	i1l139
  1366  00DD                     u110_20:
  1367  00DD                     i1l1243:
  1368                           
  1369                           ;main.c: 160:         PORTC = 0b111;
  1370  00DD  3007               	movlw	7
  1371  00DE  008E               	movwf	14	;volatile
  1372                           
  1373                           ;main.c: 161:         _delay((unsigned long)((200)*(32000000/4000000.0)));
  1374  00DF  30E4               	movlw	228
  1375  00E0                     u128_27:
  1376  00E0  3200               	nop2
  1377  00E1  3200               	nop2
  1378  00E2  0B89               	decfsz	9,f
  1379  00E3  28E0               	goto	u128_27
  1380  00E4  3200               	nop2
  1381  00E5  3200               	nop2
  1382  00E6                     i1l1245:
  1383                           
  1384                           ;main.c: 162:         static char index = 1;;main.c: 163:         index = (index % 3) + 
      +                          1;
  1385  00E6  3003               	movlw	3
  1386  00E7  00F0               	movwf	___awmod@divisor
  1387  00E8  3000               	movlw	0
  1388  00E9  00F1               	movwf	___awmod@divisor+1
  1389  00EA  0020               	movlb	0	; select bank0
  1390  00EB  0841               	movf	ICR@index,w
  1391  00EC  00C2               	movwf	??_ICR
  1392  00ED  01C3               	clrf	??_ICR+1
  1393  00EE  0842               	movf	??_ICR,w
  1394  00EF  00F2               	movwf	___awmod@dividend
  1395  00F0  0843               	movf	??_ICR+1,w
  1396  00F1  00F3               	movwf	___awmod@dividend+1
  1397  00F2  3182  2292  3180   	fcall	___awmod
  1398  00F5  0870               	movf	?___awmod,w
  1399  00F6  3E01               	addlw	1
  1400  00F7  0020               	movlb	0	; select bank0
  1401  00F8  00C4               	movwf	??_ICR+2
  1402  00F9  0844               	movf	??_ICR+2,w
  1403  00FA  00C1               	movwf	ICR@index
  1404  00FB                     i1l1247:
  1405                           
  1406                           ;main.c: 165:         if(index == 1){
  1407  00FB  0341               	decf	ICR@index,w
  1408  00FC  1D03               	btfss	3,2
  1409  00FD  28FF               	goto	u111_21
  1410  00FE  2900               	goto	u111_20
  1411  00FF                     u111_21:
  1412  00FF  2924               	goto	i1l1257
  1413  0100                     u111_20:
  1414  0100                     i1l1249:
  1415                           
  1416                           ;main.c: 166:             PORTC = 0b110;
  1417  0100  3006               	movlw	6
  1418  0101  008E               	movwf	14	;volatile
  1419  0102                     i1l1251:
  1420                           
  1421                           ;main.c: 167:             if(roll[2]){
  1422  0102  0828               	movf	_roll+2,w
  1423  0103  1903               	btfsc	3,2
  1424  0104  2906               	goto	u112_21
  1425  0105  2907               	goto	u112_20
  1426  0106                     u112_21:
  1427  0106  2916               	goto	i1l1255
  1428  0107                     u112_20:
  1429  0107                     i1l1253:
  1430                           
  1431                           ;main.c: 168:                 PORTA = segment[roll_number] + (disable << 7);
  1432  0107  0833               	movf	_roll_number,w
  1433  0108  3E37               	addlw	(low (_segment| 0))& (0+255)
  1434  0109  0086               	movwf	6
  1435  010A  0187               	clrf	7
  1436  010B  0832               	movf	_disable,w
  1437  010C  00C2               	movwf	??_ICR
  1438  010D  3006               	movlw	6
  1439  010E                     u113_25:
  1440  010E  35C2               	lslf	??_ICR,f
  1441  010F  3EFF               	addlw	-1
  1442  0110  1D03               	skipz
  1443  0111  290E               	goto	u113_25
  1444  0112  3542               	lslf	??_ICR,w
  1445  0113  0701               	addwf	1,w
  1446  0114  008C               	movwf	12	;volatile
  1447                           
  1448                           ;main.c: 169:             }else{
  1449  0115  2924               	goto	i1l1257
  1450  0116                     i1l1255:
  1451                           
  1452                           ;main.c: 170:                 PORTA = segment[score_dig[2]] + (disable << 7);
  1453  0116  0824               	movf	_score_dig+4,w
  1454  0117  3E37               	addlw	(low (_segment| 0))& (0+255)
  1455  0118  0086               	movwf	6
  1456  0119  0187               	clrf	7
  1457  011A  0832               	movf	_disable,w
  1458  011B  00C2               	movwf	??_ICR
  1459  011C  3006               	movlw	6
  1460  011D                     u114_25:
  1461  011D  35C2               	lslf	??_ICR,f
  1462  011E  3EFF               	addlw	-1
  1463  011F  1D03               	skipz
  1464  0120  291D               	goto	u114_25
  1465  0121  3542               	lslf	??_ICR,w
  1466  0122  0701               	addwf	1,w
  1467  0123  008C               	movwf	12	;volatile
  1468  0124                     i1l1257:
  1469                           
  1470                           ;main.c: 173:         if(index == 2){
  1471  0124  3002               	movlw	2
  1472  0125  0641               	xorwf	ICR@index,w
  1473  0126  1D03               	btfss	3,2
  1474  0127  2929               	goto	u115_21
  1475  0128  292A               	goto	u115_20
  1476  0129                     u115_21:
  1477  0129  294E               	goto	i1l1267
  1478  012A                     u115_20:
  1479  012A                     i1l1259:
  1480                           
  1481                           ;main.c: 174:             PORTC = 0b101;
  1482  012A  3005               	movlw	5
  1483  012B  008E               	movwf	14	;volatile
  1484  012C                     i1l1261:
  1485                           
  1486                           ;main.c: 175:             if(roll[1]){
  1487  012C  0827               	movf	_roll+1,w
  1488  012D  1903               	btfsc	3,2
  1489  012E  2930               	goto	u116_21
  1490  012F  2931               	goto	u116_20
  1491  0130                     u116_21:
  1492  0130  2940               	goto	i1l1265
  1493  0131                     u116_20:
  1494  0131                     i1l1263:
  1495                           
  1496                           ;main.c: 176:                 PORTA = segment[roll_number] + (disable << 7);
  1497  0131  0833               	movf	_roll_number,w
  1498  0132  3E37               	addlw	(low (_segment| 0))& (0+255)
  1499  0133  0086               	movwf	6
  1500  0134  0187               	clrf	7
  1501  0135  0832               	movf	_disable,w
  1502  0136  00C2               	movwf	??_ICR
  1503  0137  3006               	movlw	6
  1504  0138                     u117_25:
  1505  0138  35C2               	lslf	??_ICR,f
  1506  0139  3EFF               	addlw	-1
  1507  013A  1D03               	skipz
  1508  013B  2938               	goto	u117_25
  1509  013C  3542               	lslf	??_ICR,w
  1510  013D  0701               	addwf	1,w
  1511  013E  008C               	movwf	12	;volatile
  1512                           
  1513                           ;main.c: 177:             }else{
  1514  013F  294E               	goto	i1l1267
  1515  0140                     i1l1265:
  1516                           
  1517                           ;main.c: 178:                 PORTA = segment[score_dig[1]] + (disable << 7);
  1518  0140  0822               	movf	_score_dig+2,w
  1519  0141  3E37               	addlw	(low (_segment| 0))& (0+255)
  1520  0142  0086               	movwf	6
  1521  0143  0187               	clrf	7
  1522  0144  0832               	movf	_disable,w
  1523  0145  00C2               	movwf	??_ICR
  1524  0146  3006               	movlw	6
  1525  0147                     u118_25:
  1526  0147  35C2               	lslf	??_ICR,f
  1527  0148  3EFF               	addlw	-1
  1528  0149  1D03               	skipz
  1529  014A  2947               	goto	u118_25
  1530  014B  3542               	lslf	??_ICR,w
  1531  014C  0701               	addwf	1,w
  1532  014D  008C               	movwf	12	;volatile
  1533  014E                     i1l1267:
  1534                           
  1535                           ;main.c: 181:         if(index == 3){
  1536  014E  3003               	movlw	3
  1537  014F  0641               	xorwf	ICR@index,w
  1538  0150  1D03               	btfss	3,2
  1539  0151  2953               	goto	u119_21
  1540  0152  2954               	goto	u119_20
  1541  0153                     u119_21:
  1542  0153  2978               	goto	i1l1277
  1543  0154                     u119_20:
  1544  0154                     i1l1269:
  1545                           
  1546                           ;main.c: 182:             PORTC = 0b011;
  1547  0154  3003               	movlw	3
  1548  0155  008E               	movwf	14	;volatile
  1549  0156                     i1l1271:
  1550                           
  1551                           ;main.c: 183:             if(roll[0]){
  1552  0156  0826               	movf	_roll,w
  1553  0157  1903               	btfsc	3,2
  1554  0158  295A               	goto	u120_21
  1555  0159  295B               	goto	u120_20
  1556  015A                     u120_21:
  1557  015A  296A               	goto	i1l1275
  1558  015B                     u120_20:
  1559  015B                     i1l1273:
  1560                           
  1561                           ;main.c: 184:                 PORTA = segment[roll_number] + (disable << 7);
  1562  015B  0833               	movf	_roll_number,w
  1563  015C  3E37               	addlw	(low (_segment| 0))& (0+255)
  1564  015D  0086               	movwf	6
  1565  015E  0187               	clrf	7
  1566  015F  0832               	movf	_disable,w
  1567  0160  00C2               	movwf	??_ICR
  1568  0161  3006               	movlw	6
  1569  0162                     u121_25:
  1570  0162  35C2               	lslf	??_ICR,f
  1571  0163  3EFF               	addlw	-1
  1572  0164  1D03               	skipz
  1573  0165  2962               	goto	u121_25
  1574  0166  3542               	lslf	??_ICR,w
  1575  0167  0701               	addwf	1,w
  1576  0168  008C               	movwf	12	;volatile
  1577                           
  1578                           ;main.c: 185:             }else{
  1579  0169  2978               	goto	i1l1277
  1580  016A                     i1l1275:
  1581                           
  1582                           ;main.c: 186:                 PORTA = segment[score_dig[0]] + (disable << 7);
  1583  016A  0820               	movf	_score_dig,w
  1584  016B  3E37               	addlw	(low (_segment| 0))& (0+255)
  1585  016C  0086               	movwf	6
  1586  016D  0187               	clrf	7
  1587  016E  0832               	movf	_disable,w
  1588  016F  00C2               	movwf	??_ICR
  1589  0170  3006               	movlw	6
  1590  0171                     u122_25:
  1591  0171  35C2               	lslf	??_ICR,f
  1592  0172  3EFF               	addlw	-1
  1593  0173  1D03               	skipz
  1594  0174  2971               	goto	u122_25
  1595  0175  3542               	lslf	??_ICR,w
  1596  0176  0701               	addwf	1,w
  1597  0177  008C               	movwf	12	;volatile
  1598  0178                     i1l1277:
  1599                           
  1600                           ;main.c: 189:         RA7 = disable;
  1601  0178  1832               	btfsc	_disable,0
  1602  0179  297B               	goto	u123_21
  1603  017A  297E               	goto	u123_20
  1604  017B                     u123_21:
  1605  017B  0020               	movlb	0	; select bank0
  1606  017C  178C               	bsf	12,7	;volatile
  1607  017D  2980               	goto	u124_24
  1608  017E                     u123_20:
  1609  017E  0020               	movlb	0	; select bank0
  1610  017F  138C               	bcf	12,7	;volatile
  1611  0180                     u124_24:
  1612  0180                     i1l1279:
  1613                           
  1614                           ;main.c: 190:         static int count = 0;;main.c: 191:         count++;
  1615  0180  3001               	movlw	1
  1616  0181  07AC               	addwf	ICR@count,f
  1617  0182  3000               	movlw	0
  1618  0183  3DAD               	addwfc	ICR@count+1,f
  1619  0184                     i1l1281:
  1620                           
  1621                           ;main.c: 192:         if(count > 100){
  1622  0184  082D               	movf	ICR@count+1,w
  1623  0185  3A80               	xorlw	128
  1624  0186  00C2               	movwf	??_ICR
  1625  0187  3080               	movlw	128
  1626  0188  0242               	subwf	??_ICR,w
  1627  0189  1D03               	skipz
  1628  018A  298D               	goto	u125_25
  1629  018B  3065               	movlw	101
  1630  018C  022C               	subwf	ICR@count,w
  1631  018D                     u125_25:
  1632  018D  1C03               	skipc
  1633  018E  2990               	goto	u125_21
  1634  018F  2991               	goto	u125_20
  1635  0190                     u125_21:
  1636  0190  299F               	goto	i1l1289
  1637  0191                     u125_20:
  1638  0191                     i1l1283:
  1639                           
  1640                           ;main.c: 193:             roll_number++;
  1641  0191  3001               	movlw	1
  1642  0192  0020               	movlb	0	; select bank0
  1643  0193  00C2               	movwf	??_ICR
  1644  0194  0842               	movf	??_ICR,w
  1645  0195  07B3               	addwf	_roll_number,f
  1646  0196                     i1l1285:
  1647                           
  1648                           ;main.c: 194:             if(roll_number > 9) roll_number = 0;
  1649  0196  300A               	movlw	10
  1650  0197  0233               	subwf	_roll_number,w
  1651  0198  1C03               	skipc
  1652  0199  299B               	goto	u126_21
  1653  019A  299C               	goto	u126_20
  1654  019B                     u126_21:
  1655  019B  299D               	goto	i1l138
  1656  019C                     u126_20:
  1657  019C                     i1l1287:
  1658  019C  01B3               	clrf	_roll_number
  1659  019D                     i1l138:
  1660                           
  1661                           ;main.c: 195:             count = 0;
  1662  019D  01AC               	clrf	ICR@count
  1663  019E  01AD               	clrf	ICR@count+1
  1664  019F                     i1l1289:
  1665                           
  1666                           ;main.c: 197:         T0IF = 0;
  1667  019F  110B               	bcf	11,2	;volatile
  1668  01A0                     i1l139:
  1669  01A0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1670  01A1  0009               	retfie
  1671  01A2                     __end_of_ICR:
  1672                           
  1673                           	psect	text2
  1674  0355                     __ptext2:	
  1675 ;; *************** function ___wmul *****************
  1676 ;; Defined at:
  1677 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  multiplier      2    0[COMMON] unsigned int 
  1680 ;;  multiplicand    2    2[COMMON] unsigned int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  product         2    4[COMMON] unsigned int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    0[COMMON] unsigned int 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;Total ram usage:        6 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_ICR
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function ___wmul
  1707  0355                     ___wmul:
  1708  0355                     i1l1019:	
  1709                           ;incstack = 0
  1710                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1711                           
  1712  0355  01F4               	clrf	___wmul@product
  1713  0356  01F5               	clrf	___wmul@product+1
  1714  0357                     i1l1021:
  1715  0357  1C70               	btfss	___wmul@multiplier,0
  1716  0358  2B5A               	goto	u64_21
  1717  0359  2B5B               	goto	u64_20
  1718  035A                     u64_21:
  1719  035A  2B5F               	goto	i1l289
  1720  035B                     u64_20:
  1721  035B                     i1l1023:
  1722  035B  0872               	movf	___wmul@multiplicand,w
  1723  035C  07F4               	addwf	___wmul@product,f
  1724  035D  0873               	movf	___wmul@multiplicand+1,w
  1725  035E  3DF5               	addwfc	___wmul@product+1,f
  1726  035F                     i1l289:
  1727  035F  3001               	movlw	1
  1728  0360                     u65_25:
  1729  0360  35F2               	lslf	___wmul@multiplicand,f
  1730  0361  0DF3               	rlf	___wmul@multiplicand+1,f
  1731  0362  0B89               	decfsz	9,f
  1732  0363  2B60               	goto	u65_25
  1733  0364                     i1l1025:
  1734  0364  3001               	movlw	1
  1735  0365                     u66_25:
  1736  0365  36F1               	lsrf	___wmul@multiplier+1,f
  1737  0366  0CF0               	rrf	___wmul@multiplier,f
  1738  0367  0B89               	decfsz	9,f
  1739  0368  2B65               	goto	u66_25
  1740  0369                     i1l1027:
  1741  0369  0870               	movf	___wmul@multiplier,w
  1742  036A  0471               	iorwf	___wmul@multiplier+1,w
  1743  036B  1D03               	btfss	3,2
  1744  036C  2B6E               	goto	u67_21
  1745  036D  2B6F               	goto	u67_20
  1746  036E                     u67_21:
  1747  036E  2B57               	goto	i1l1021
  1748  036F                     u67_20:
  1749  036F                     i1l1029:
  1750  036F  0875               	movf	___wmul@product+1,w
  1751  0370  00F1               	movwf	?___wmul+1
  1752  0371  0874               	movf	___wmul@product,w
  1753  0372  00F0               	movwf	?___wmul
  1754  0373                     i1l291:
  1755  0373  0008               	return
  1756  0374                     __end_of___wmul:
  1757                           
  1758                           	psect	text3
  1759  0321                     __ptext3:	
  1760 ;; *************** function ___lwmod *****************
  1761 ;; Defined at:
  1762 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  divisor         2    0[COMMON] unsigned int 
  1765 ;;  dividend        2    2[COMMON] unsigned int 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  counter         1    5[COMMON] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2    0[COMMON] unsigned int 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;Total ram usage:        6 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_ICR
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function ___lwmod
  1792  0321                     ___lwmod:
  1793  0321                     i1l1097:	
  1794                           ;incstack = 0
  1795                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1796                           
  1797  0321  0870               	movf	___lwmod@divisor,w
  1798  0322  0471               	iorwf	___lwmod@divisor+1,w
  1799  0323  1903               	btfsc	3,2
  1800  0324  2B26               	goto	u84_21
  1801  0325  2B27               	goto	u84_20
  1802  0326                     u84_21:
  1803  0326  2B50               	goto	i1l1115
  1804  0327                     u84_20:
  1805  0327                     i1l1099:
  1806  0327  01F5               	clrf	___lwmod@counter
  1807  0328  0AF5               	incf	___lwmod@counter,f
  1808  0329  2B33               	goto	i1l1105
  1809  032A                     i1l1101:
  1810  032A  3001               	movlw	1
  1811  032B                     u85_25:
  1812  032B  35F0               	lslf	___lwmod@divisor,f
  1813  032C  0DF1               	rlf	___lwmod@divisor+1,f
  1814  032D  0B89               	decfsz	9,f
  1815  032E  2B2B               	goto	u85_25
  1816  032F                     i1l1103:
  1817  032F  3001               	movlw	1
  1818  0330  00F4               	movwf	??___lwmod
  1819  0331  0874               	movf	??___lwmod,w
  1820  0332  07F5               	addwf	___lwmod@counter,f
  1821  0333                     i1l1105:
  1822  0333  1FF1               	btfss	___lwmod@divisor+1,7
  1823  0334  2B36               	goto	u86_21
  1824  0335  2B37               	goto	u86_20
  1825  0336                     u86_21:
  1826  0336  2B2A               	goto	i1l1101
  1827  0337                     u86_20:
  1828  0337                     i1l1107:
  1829  0337  0871               	movf	___lwmod@divisor+1,w
  1830  0338  0273               	subwf	___lwmod@dividend+1,w
  1831  0339  1D03               	skipz
  1832  033A  2B3D               	goto	u87_25
  1833  033B  0870               	movf	___lwmod@divisor,w
  1834  033C  0272               	subwf	___lwmod@dividend,w
  1835  033D                     u87_25:
  1836  033D  1C03               	skipc
  1837  033E  2B40               	goto	u87_21
  1838  033F  2B41               	goto	u87_20
  1839  0340                     u87_21:
  1840  0340  2B45               	goto	i1l1111
  1841  0341                     u87_20:
  1842  0341                     i1l1109:
  1843  0341  0870               	movf	___lwmod@divisor,w
  1844  0342  02F2               	subwf	___lwmod@dividend,f
  1845  0343  0871               	movf	___lwmod@divisor+1,w
  1846  0344  3BF3               	subwfb	___lwmod@dividend+1,f
  1847  0345                     i1l1111:
  1848  0345  3001               	movlw	1
  1849  0346                     u88_25:
  1850  0346  36F1               	lsrf	___lwmod@divisor+1,f
  1851  0347  0CF0               	rrf	___lwmod@divisor,f
  1852  0348  0B89               	decfsz	9,f
  1853  0349  2B46               	goto	u88_25
  1854  034A                     i1l1113:
  1855  034A  3001               	movlw	1
  1856  034B  02F5               	subwf	___lwmod@counter,f
  1857  034C  1D03               	btfss	3,2
  1858  034D  2B4F               	goto	u89_21
  1859  034E  2B50               	goto	u89_20
  1860  034F                     u89_21:
  1861  034F  2B37               	goto	i1l1107
  1862  0350                     u89_20:
  1863  0350                     i1l1115:
  1864  0350  0873               	movf	___lwmod@dividend+1,w
  1865  0351  00F1               	movwf	?___lwmod+1
  1866  0352  0872               	movf	___lwmod@dividend,w
  1867  0353  00F0               	movwf	?___lwmod
  1868  0354                     i1l579:
  1869  0354  0008               	return
  1870  0355                     __end_of___lwmod:
  1871                           
  1872                           	psect	text4
  1873  02E5                     __ptext4:	
  1874 ;; *************** function ___lwdiv *****************
  1875 ;; Defined at:
  1876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  divisor         2    6[COMMON] unsigned int 
  1879 ;;  dividend        2    8[COMMON] unsigned int 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  quotient        2   11[COMMON] unsigned int 
  1882 ;;  counter         1   13[COMMON] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  2    6[COMMON] unsigned int 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1896 ;;Total ram usage:        8 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_ICR
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function ___lwdiv
  1907  02E5                     ___lwdiv:
  1908  02E5                     i1l1071:	
  1909                           ;incstack = 0
  1910                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1911                           
  1912  02E5  01FB               	clrf	___lwdiv@quotient
  1913  02E6  01FC               	clrf	___lwdiv@quotient+1
  1914  02E7                     i1l1073:
  1915  02E7  0876               	movf	___lwdiv@divisor,w
  1916  02E8  0477               	iorwf	___lwdiv@divisor+1,w
  1917  02E9  1903               	btfsc	3,2
  1918  02EA  2AEC               	goto	u77_21
  1919  02EB  2AED               	goto	u77_20
  1920  02EC                     u77_21:
  1921  02EC  2B1C               	goto	i1l1093
  1922  02ED                     u77_20:
  1923  02ED                     i1l1075:
  1924  02ED  01FD               	clrf	___lwdiv@counter
  1925  02EE  0AFD               	incf	___lwdiv@counter,f
  1926  02EF  2AF9               	goto	i1l1081
  1927  02F0                     i1l1077:
  1928  02F0  3001               	movlw	1
  1929  02F1                     u78_25:
  1930  02F1  35F6               	lslf	___lwdiv@divisor,f
  1931  02F2  0DF7               	rlf	___lwdiv@divisor+1,f
  1932  02F3  0B89               	decfsz	9,f
  1933  02F4  2AF1               	goto	u78_25
  1934  02F5                     i1l1079:
  1935  02F5  3001               	movlw	1
  1936  02F6  00FA               	movwf	??___lwdiv
  1937  02F7  087A               	movf	??___lwdiv,w
  1938  02F8  07FD               	addwf	___lwdiv@counter,f
  1939  02F9                     i1l1081:
  1940  02F9  1FF7               	btfss	___lwdiv@divisor+1,7
  1941  02FA  2AFC               	goto	u79_21
  1942  02FB  2AFD               	goto	u79_20
  1943  02FC                     u79_21:
  1944  02FC  2AF0               	goto	i1l1077
  1945  02FD                     u79_20:
  1946  02FD                     i1l1083:
  1947  02FD  3001               	movlw	1
  1948  02FE                     u80_25:
  1949  02FE  35FB               	lslf	___lwdiv@quotient,f
  1950  02FF  0DFC               	rlf	___lwdiv@quotient+1,f
  1951  0300  0B89               	decfsz	9,f
  1952  0301  2AFE               	goto	u80_25
  1953  0302  0877               	movf	___lwdiv@divisor+1,w
  1954  0303  0279               	subwf	___lwdiv@dividend+1,w
  1955  0304  1D03               	skipz
  1956  0305  2B08               	goto	u81_25
  1957  0306  0876               	movf	___lwdiv@divisor,w
  1958  0307  0278               	subwf	___lwdiv@dividend,w
  1959  0308                     u81_25:
  1960  0308  1C03               	skipc
  1961  0309  2B0B               	goto	u81_21
  1962  030A  2B0C               	goto	u81_20
  1963  030B                     u81_21:
  1964  030B  2B11               	goto	i1l1089
  1965  030C                     u81_20:
  1966  030C                     i1l1085:
  1967  030C  0876               	movf	___lwdiv@divisor,w
  1968  030D  02F8               	subwf	___lwdiv@dividend,f
  1969  030E  0877               	movf	___lwdiv@divisor+1,w
  1970  030F  3BF9               	subwfb	___lwdiv@dividend+1,f
  1971  0310                     i1l1087:
  1972  0310  147B               	bsf	___lwdiv@quotient,0
  1973  0311                     i1l1089:
  1974  0311  3001               	movlw	1
  1975  0312                     u82_25:
  1976  0312  36F7               	lsrf	___lwdiv@divisor+1,f
  1977  0313  0CF6               	rrf	___lwdiv@divisor,f
  1978  0314  0B89               	decfsz	9,f
  1979  0315  2B12               	goto	u82_25
  1980  0316                     i1l1091:
  1981  0316  3001               	movlw	1
  1982  0317  02FD               	subwf	___lwdiv@counter,f
  1983  0318  1D03               	btfss	3,2
  1984  0319  2B1B               	goto	u83_21
  1985  031A  2B1C               	goto	u83_20
  1986  031B                     u83_21:
  1987  031B  2AFD               	goto	i1l1083
  1988  031C                     u83_20:
  1989  031C                     i1l1093:
  1990  031C  087C               	movf	___lwdiv@quotient+1,w
  1991  031D  00F7               	movwf	?___lwdiv+1
  1992  031E  087B               	movf	___lwdiv@quotient,w
  1993  031F  00F6               	movwf	?___lwdiv
  1994  0320                     i1l569:
  1995  0320  0008               	return
  1996  0321                     __end_of___lwdiv:
  1997                           
  1998                           	psect	text5
  1999  0292                     __ptext5:	
  2000 ;; *************** function ___awmod *****************
  2001 ;; Defined at:
  2002 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  divisor         2    0[COMMON] int 
  2005 ;;  dividend        2    2[COMMON] int 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  sign            1    6[COMMON] unsigned char 
  2008 ;;  counter         1    5[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2    0[COMMON] int 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;Total ram usage:        7 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_ICR
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function ___awmod
  2033  0292                     ___awmod:
  2034  0292                     i1l1033:	
  2035                           ;incstack = 0
  2036                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2037                           
  2038  0292  01F6               	clrf	___awmod@sign
  2039  0293                     i1l1035:
  2040  0293  1FF3               	btfss	___awmod@dividend+1,7
  2041  0294  2A96               	goto	u68_21
  2042  0295  2A97               	goto	u68_20
  2043  0296                     u68_21:
  2044  0296  2A9E               	goto	i1l1041
  2045  0297                     u68_20:
  2046  0297                     i1l1037:
  2047  0297  09F2               	comf	___awmod@dividend,f
  2048  0298  09F3               	comf	___awmod@dividend+1,f
  2049  0299  0AF2               	incf	___awmod@dividend,f
  2050  029A  1903               	skipnz
  2051  029B  0AF3               	incf	___awmod@dividend+1,f
  2052  029C                     i1l1039:
  2053  029C  01F6               	clrf	___awmod@sign
  2054  029D  0AF6               	incf	___awmod@sign,f
  2055  029E                     i1l1041:
  2056  029E  1FF1               	btfss	___awmod@divisor+1,7
  2057  029F  2AA1               	goto	u69_21
  2058  02A0  2AA2               	goto	u69_20
  2059  02A1                     u69_21:
  2060  02A1  2AA7               	goto	i1l1045
  2061  02A2                     u69_20:
  2062  02A2                     i1l1043:
  2063  02A2  09F0               	comf	___awmod@divisor,f
  2064  02A3  09F1               	comf	___awmod@divisor+1,f
  2065  02A4  0AF0               	incf	___awmod@divisor,f
  2066  02A5  1903               	skipnz
  2067  02A6  0AF1               	incf	___awmod@divisor+1,f
  2068  02A7                     i1l1045:
  2069  02A7  0870               	movf	___awmod@divisor,w
  2070  02A8  0471               	iorwf	___awmod@divisor+1,w
  2071  02A9  1903               	btfsc	3,2
  2072  02AA  2AAC               	goto	u70_21
  2073  02AB  2AAD               	goto	u70_20
  2074  02AC                     u70_21:
  2075  02AC  2AD6               	goto	i1l1063
  2076  02AD                     u70_20:
  2077  02AD                     i1l1047:
  2078  02AD  01F5               	clrf	___awmod@counter
  2079  02AE  0AF5               	incf	___awmod@counter,f
  2080  02AF  2AB9               	goto	i1l1053
  2081  02B0                     i1l1049:
  2082  02B0  3001               	movlw	1
  2083  02B1                     u71_25:
  2084  02B1  35F0               	lslf	___awmod@divisor,f
  2085  02B2  0DF1               	rlf	___awmod@divisor+1,f
  2086  02B3  0B89               	decfsz	9,f
  2087  02B4  2AB1               	goto	u71_25
  2088  02B5                     i1l1051:
  2089  02B5  3001               	movlw	1
  2090  02B6  00F4               	movwf	??___awmod
  2091  02B7  0874               	movf	??___awmod,w
  2092  02B8  07F5               	addwf	___awmod@counter,f
  2093  02B9                     i1l1053:
  2094  02B9  1FF1               	btfss	___awmod@divisor+1,7
  2095  02BA  2ABC               	goto	u72_21
  2096  02BB  2ABD               	goto	u72_20
  2097  02BC                     u72_21:
  2098  02BC  2AB0               	goto	i1l1049
  2099  02BD                     u72_20:
  2100  02BD                     i1l1055:
  2101  02BD  0871               	movf	___awmod@divisor+1,w
  2102  02BE  0273               	subwf	___awmod@dividend+1,w
  2103  02BF  1D03               	skipz
  2104  02C0  2AC3               	goto	u73_25
  2105  02C1  0870               	movf	___awmod@divisor,w
  2106  02C2  0272               	subwf	___awmod@dividend,w
  2107  02C3                     u73_25:
  2108  02C3  1C03               	skipc
  2109  02C4  2AC6               	goto	u73_21
  2110  02C5  2AC7               	goto	u73_20
  2111  02C6                     u73_21:
  2112  02C6  2ACB               	goto	i1l1059
  2113  02C7                     u73_20:
  2114  02C7                     i1l1057:
  2115  02C7  0870               	movf	___awmod@divisor,w
  2116  02C8  02F2               	subwf	___awmod@dividend,f
  2117  02C9  0871               	movf	___awmod@divisor+1,w
  2118  02CA  3BF3               	subwfb	___awmod@dividend+1,f
  2119  02CB                     i1l1059:
  2120  02CB  3001               	movlw	1
  2121  02CC                     u74_25:
  2122  02CC  36F1               	lsrf	___awmod@divisor+1,f
  2123  02CD  0CF0               	rrf	___awmod@divisor,f
  2124  02CE  0B89               	decfsz	9,f
  2125  02CF  2ACC               	goto	u74_25
  2126  02D0                     i1l1061:
  2127  02D0  3001               	movlw	1
  2128  02D1  02F5               	subwf	___awmod@counter,f
  2129  02D2  1D03               	btfss	3,2
  2130  02D3  2AD5               	goto	u75_21
  2131  02D4  2AD6               	goto	u75_20
  2132  02D5                     u75_21:
  2133  02D5  2ABD               	goto	i1l1055
  2134  02D6                     u75_20:
  2135  02D6                     i1l1063:
  2136  02D6  0876               	movf	___awmod@sign,w
  2137  02D7  1903               	btfsc	3,2
  2138  02D8  2ADA               	goto	u76_21
  2139  02D9  2ADB               	goto	u76_20
  2140  02DA                     u76_21:
  2141  02DA  2AE0               	goto	i1l1067
  2142  02DB                     u76_20:
  2143  02DB                     i1l1065:
  2144  02DB  09F2               	comf	___awmod@dividend,f
  2145  02DC  09F3               	comf	___awmod@dividend+1,f
  2146  02DD  0AF2               	incf	___awmod@dividend,f
  2147  02DE  1903               	skipnz
  2148  02DF  0AF3               	incf	___awmod@dividend+1,f
  2149  02E0                     i1l1067:
  2150  02E0  0873               	movf	___awmod@dividend+1,w
  2151  02E1  00F1               	movwf	?___awmod+1
  2152  02E2  0872               	movf	___awmod@dividend,w
  2153  02E3  00F0               	movwf	?___awmod
  2154  02E4                     i1l455:
  2155  02E4  0008               	return
  2156  02E5                     __end_of___awmod:
  2157  007E                     btemp	set	126	;btemp
  2158  007E                     int$flags	set	126
  2159  007E                     wtemp0	set	126
  2160                           
  2161                           	psect	config
  2162                           
  2163                           ;Config register CONFIG1 @ 0x8007
  2164                           ;	Oscillator Selection
  2165                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2166                           ;	Watchdog Timer Enable
  2167                           ;	WDTE = OFF, WDT disabled
  2168                           ;	Power-up Timer Enable
  2169                           ;	PWRTE = OFF, PWRT disabled
  2170                           ;	MCLR Pin Function Select
  2171                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2172                           ;	Flash Program Memory Code Protection
  2173                           ;	CP = OFF, Program memory code protection is disabled
  2174                           ;	Data Memory Code Protection
  2175                           ;	CPD = OFF, Data memory code protection is disabled
  2176                           ;	Brown-out Reset Enable
  2177                           ;	BOREN = OFF, Brown-out Reset disabled
  2178                           ;	Clock Out Enable
  2179                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2180                           ;	Internal/External Switchover
  2181                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2182                           ;	Fail-Safe Clock Monitor Enable
  2183                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2184  8007                     	org	32775
  2185  8007  39E4               	dw	14820
  2186                           
  2187                           ;Config register CONFIG2 @ 0x8008
  2188                           ;	Flash Memory Self-Write Protection
  2189                           ;	WRT = OFF, Write protection off
  2190                           ;	Voltage Regulator Capacitor Enable
  2191                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2192                           ;	PLL Enable
  2193                           ;	PLLEN = ON, 4x PLL enabled
  2194                           ;	Stack Overflow/Underflow Reset Enable
  2195                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2196                           ;	Brown-out Reset Voltage Selection
  2197                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2198                           ;	Low-Voltage Programming Enable
  2199                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2200  8008                     	org	32776
  2201  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      41
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ICR in COMMON

    _ICR->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ICR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ICR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ICR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ICR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ICR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ICR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ICR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ICR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ICR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ICR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ICR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ICR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ICR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      23
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ICR                                                  4     4      0    1773
                                              0 BANK0      4     4      0
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ICR (ROOT)
   ___awmod
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      29       5       51.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      37      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      37      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jan 14 23:47:18 2021

                     l99 023A      ___wmul@multiplicand 0072                      l101 0258  
                    l103 0272                      _GIE 005F                      _RB0 0068  
                    _ICR 0004                      _RB1 0069                      _RB2 006A  
                    _RB3 006B                      _RB4 006C                      _RB5 006D  
                    _RA7 0067                      _RC5 0075                      _RC6 0076  
                    u900 01FC                      u901 01FB                      u910 0201  
                    u911 0200                      u920 0209                      u921 0208  
                    u930 0211                      u931 0210                      u940 0219  
                    u941 0218                      u950 0221                      u951 0220  
                    u960 0229                      u961 0228                      u970 0236  
                    u971 0235                      u980 0247                      u981 0246  
                    u990 0253                      u991 0252                      u985 0243  
                    _buf 0035             ___awmod@sign 0076                      wreg 0009  
            main@address 0048                     ?_ICR 0070                     l1121 01BF  
                   l1131 01E3                     l1123 01C0                     l1141 01EF  
                   l1133 01EA                     l1125 01C2                     l1151 01F5  
                   l1143 01F0                     l1135 01EB                     l1127 01D5  
                   l1119 01BC                     l1161 020D                     l1153 01FC  
                   l1145 01F1                     l1137 01EC                     l1129 01DF  
                   l1171 0221                     l1163 0211                     l1155 0201  
                   l1147 01F2                     l1139 01ED                     l1181 0247  
                   l1173 0225                     l1165 0215                     l1157 0205  
                   l1149 01F4                     l1191 026E                     l1183 024A  
                   l1175 0229                     l1167 0219                     l1159 0209  
                   l1193 027F                     l1185 0253                     l1177 022D  
                   l1169 021D                     l1195 0282                     l1187 0266  
                   l1179 0236                     l1197 0283                     l1189 0269  
                   _T0IE 005D                     u1000 0266                     _T0IF 005A  
                   u1001 0265                     u1010 026E                     u1011 026D  
                   u1020 027F                     u1021 027E                     u1005 0262  
                   u1025 027B                     u1277 0289                     _TMR0 0015  
                   _WPUB 020D                     _main 01BC                     _send 0034  
                   _roll 0026                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 01A2  
                  ??_ICR 0042                    ?_main 0070          __end_of___awmod 02E5  
        __end_of___lwdiv 0321                    i1l112 00D9                    i1l116 00D7  
                  i1l119 00CE                    i1l138 019D                    i1l139 01A0  
        __end_of___lwmod 0355                    i1l291 0373                    i1l455 02E4  
                  i1l289 035F                    i1l569 0320                    i1l579 0354  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  u70_20 02AD                    u70_21 02AC                    u71_25 02B1  
                  u72_20 02BD                    u64_20 035B                    u72_21 02BC  
                  u64_21 035A                    u80_25 02FE                    u73_20 02C7  
                  u81_20 030C                    u73_21 02C6                    u81_21 030B  
                  _TRISA 008C                    _TRISB 008D                    u73_25 02C3  
                  u81_25 0308                    u65_25 0360                    _TRISC 008E  
                  _SSPIE 048B                    _SSPIF 008B                    u74_25 02CC  
                  u82_25 0312                    u66_25 0365                    u75_20 02D6  
                  u83_20 031C                    u67_20 036F                    u75_21 02D5  
                  u83_21 031B                    u67_21 036E                    u76_20 02DB  
                  u68_20 0297                    u84_20 0327                    u76_21 02DA  
                  u68_21 0296                    u84_21 0326                    u69_20 02A2  
                  u77_20 02ED                    u69_21 02A1                    u77_21 02EC  
                  u85_25 032B                    u86_20 0337                    u86_21 0336  
                  u78_25 02F1                    u79_20 02FD                    u87_20 0341  
                  u79_21 02FC                    u87_21 0340                    u87_25 033D  
                  u88_25 0346                    u89_20 0350                    u89_21 034F  
                  status 0003                    wtemp0 007E          __initialization 01A4  
           __end_of_main 0292                   ??_main 0046                   _ANSELA 018C  
                 _ANSELB 018D                   i1l1101 032A                   i1l1021 0357  
                 i1l1111 0345                   i1l1103 032F                   i1l1023 035B  
                 u110_20 00DD                   i1l1041 029E                   i1l1033 0292  
                 i1l1113 034A                   i1l1105 0333                   i1l1025 0364  
                 u110_21 00DC                   i1l1201 000B                   i1l1051 02B5  
                 i1l1043 02A2                   i1l1035 0293                   i1l1107 0337  
                 i1l1115 0350                   i1l1027 0369                   i1l1019 0355  
                 i1l1211 0024                   i1l1203 0010                   i1l1061 02D0  
                 i1l1053 02B9                   i1l1045 02A7                   i1l1037 0297  
                 i1l1109 0341                   i1l1029 036F                   i1l1221 0050  
                 i1l1213 0028                   i1l1205 0014                   i1l1055 02BD  
                 i1l1047 02AD                   i1l1063 02D6                   i1l1039 029C  
                 i1l1071 02E5                   i1l1223 0055                   i1l1215 0035  
                 i1l1207 0019                   i1l1231 0093                   u111_20 0100  
                 u103_20 000B                   i1l1065 02DB                   i1l1057 02C7  
                 i1l1049 02B0                   i1l1081 02F9                   i1l1073 02E7  
                 u111_21 00FF                   i1l1233 00C0                   i1l1225 0065  
                 i1l1217 0040                   i1l1209 001B                   u103_21 000A  
                 i1l1067 02E0                   i1l1059 02CB                   i1l1091 0316  
                 i1l1083 02FD                   i1l1075 02ED                   i1l1251 0102  
                 i1l1243 00DD                   i1l1235 00C5                   i1l1227 0080  
                 i1l1219 004B                   i1l1085 030C                   i1l1077 02F0  
                 i1l1093 031C                   i1l1261 012C                   i1l1253 0107  
                 i1l1245 00E6                   i1l1229 0090                   i1l1087 0310  
                 i1l1079 02F5                   i1l1271 0156                   i1l1263 0131  
                 i1l1255 0116                   i1l1247 00FB                   i1l1239 00D2  
                 u120_20 015B                   u112_20 0107                   u104_20 0010  
                 i1l1089 0311                   i1l1097 0321                   i1l1281 0184  
                 i1l1273 015B                   u120_21 015A                   i1l1265 0140  
                 u112_21 0106                   i1l1249 0100                   i1l1257 0124  
                 u104_21 000F                   i1l1099 0327                   i1l1283 0191  
                 i1l1275 016A                   i1l1259 012A                   i1l1267 014E  
                 i1l1285 0196                   i1l1269 0154                   i1l1277 0178  
                 i1l1287 019C                   i1l1279 0180                   i1l1199 0006  
                 u105_20 0014                   i1l1289 019F                   u105_21 0013  
                 u121_25 0162                   u113_25 010E                   u122_25 0171  
                 u114_25 011D                   u106_25 0038                   u123_20 017E  
                 u115_20 012A                   u123_21 017B                   u115_21 0129  
                 u107_25 0043                   u116_20 0131                   u108_20 00C5  
                 u116_21 0130                   u108_21 00C4                   u124_24 0180  
                 u125_20 0191                   u109_20 00D2                   u125_21 0190  
                 u109_21 00D1                   u125_25 018D                   u117_25 0138  
                 u126_20 019C                   u126_21 019B                   u118_25 0147  
                 u119_20 0154                   u119_21 0153                   u128_27 00E0  
                 _OSCCON 0099                   _SSPADD 0212                   _SSPBUF 0211  
                 _SSPMSK 0213                   ___wmul 0355                ??___awmod 0074  
              ??___lwdiv 007A                ??___lwmod 0074          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 01B8           __pcstackCOMMON 0070  
           __pidataBANK0 0374           _OPTION_REGbits 0095               __pbssBANK0 0020  
             __pmaintext 01BC                  ?___wmul 0070               __pintentry 0004  
                _SSPCON1 0215                  _SSPCON2 0216                  _SSPSTAT 0214  
                ___awmod 0292          __size_of___wmul 001F                  ___lwdiv 02E5  
                ___lwmod 0321                  _disable 0032                  __ptext2 0355  
                __ptext3 0321                  __ptext4 02E5                  __ptext5 0292  
           __size_of_ICR 019E         ___awmod@dividend 0072                  _segment 0037  
                clrloop0 0386               _recv_count 0036               _recv_score 0030  
   end_of_initialization 01B8                  init_ram 037F                  initloop 0380  
         __end_of___wmul 0374      start_initialization 01A4              __end_of_ICR 01A2  
               ??___wmul 0074              __pdataBANK0 0037                 ICR@count 002C  
               ICR@index 0041                 ICR@score 002E                ___latbits 0003  
          __pcstackBANK0 0042         ___lwdiv@dividend 0078                 ?___awmod 0070  
               ?___lwdiv 0076                 ?___lwmod 0070         ___lwdiv@quotient 007B  
              _recv_data 0029           ___wmul@product 0074                clear_ram0 0385  
              _score_dig 0020        ___wmul@multiplier 0070         __size_of___awmod 0053  
       __size_of___lwdiv 003C         __size_of___lwmod 0034          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D            __size_of_main 00D6                 int$flags 007E  
               intlevel1 0000         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0075              _roll_number 0033  
